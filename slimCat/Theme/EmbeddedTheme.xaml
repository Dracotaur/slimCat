<ResourceDictionary x:Class="slimCat.Theme.EmbeddedTheme"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:utilities="clr-namespace:slimCat.Utilities"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:models="clr-namespace:slimCat.Models"
                    xmlns:v="clr-namespace:slimCat.Views"
                    mc:Ignorable="d">

    <SolidColorBrush Color="{StaticResource ForegroundColor}" Opacity="0.9" x:Key="HistoryBrush" />

    <BooleanToVisibilityConverter x:Key="BoolConverter" />
    <utilities:OppositeBoolConverter x:Key="OppositeBoolConverter" />
    <utilities:HiddenBoolConverter x:Key="HiddenBoolConverter" />
    <utilities:BoolColorConverter x:Key="ColorConverter" />
	<utilities:GenderImageConverter x:Key="GenderImageConverter" />
	<utilities:UserStatusColorConverter x:Key="UserStatusColorConverter" />
	<utilities:ChannelTypeToImageConverter x:Key="ChannelTypeToImageConverter" />
    <utilities:GreaterThanZeroConverter x:Key="GreaterThanZeroConverter" />
    <utilities:MessageInterestedColorConverter x:Key="MessageInterestedColorConverter" />
    <utilities:MessageDelimiterColorConverter x:Key="DelimiterColorConverter" />
    <utilities:CharacterStatusOpacityConverter x:Key="CharacterStatusOpacityConverter" />
    <utilities:MessageThicknessConverter x:Key="MessageThicknessConverter" />
    <utilities:NotEmptyConverter x:Key="NotEmptyConverter" />
    <utilities:EmptyConverter x:Key="EmptyConverter" />
    <utilities:NotEmptyBoolConverter x:Key="NotEmptyBoolConverter" />
    <utilities:ImagePathConverter x:Key="ImagePathConverter" />
    <utilities:NotNullConverter x:Key="NotNullConverter" />
    <utilities:NullConverter x:Key="NullConverter" />
    <utilities:CommaConverter x:Key="CommaConverter" />
    <utilities:CharacterAvatarConverter x:Key="CharacterAvatarConverter" />
    <utilities:CacheUriForeverConverter x:Key="CacheUriForeverConverter" />
    <utilities:AutoOrStarConverter x:Key="AutoOrStarConverter" />
    <utilities:RemoveSomeConverter x:Key="RemoveSomeConverter" />
    <utilities:ReduceRowConverter x:Key="ReduceRowConverter" />
    <utilities:EqualsConverter x:Key="EqualsConverter" />
    <utilities:EIconConverter x:Key="EIconConverter" />

    <utilities:ConverterChain x:Key="EqualsVisibilityConverterChain">
        <utilities:EqualsConverter />
        <BooleanToVisibilityConverter />
    </utilities:ConverterChain>

    <!-- These will be replaced with their instance values by the container -->
    <utilities:GenderColorConverter x:Key="GenderColorConverter" />
    <utilities:NameplateColorConverter x:Key="NameplateColorConverter" />
    <utilities:NameplateMessageColorConverter x:Key="NameplateMessageColorConverter" />
    <utilities:BbFlowConverter x:Key="BbFlowConverter" />
    <utilities:BbCodePostConverter x:Key="BbPostConverter" />
    <utilities:BbCodeConverter x:Key="BbCodeConverter" />
    <utilities:ForegroundBrushConverter x:Key="ForegroundBrushConverter" />

    <Style TargetType="Hyperlink" x:Key="ChannelStyle">
        <Setter Property="Command"
                Value="{Binding Path=DataContext.JoinChannelCommand,
					RelativeSource={RelativeSource Mode=FindAncestor,
					AncestorType={x:Type Grid}, AncestorLevel=2} }" />
        <Setter Property="TextDecorations" Value="{x:Null}" />
        <Setter Property="TextBlock.FontWeight" Value="Medium" />

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>

            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Foreground" Value="{StaticResource HighlightBrush}" />
            </Trigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DepressedBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Hyperlink" x:Key="UsernameStyle"
           d:DataContext="{d:DesignInstance models:ICharacter}">
        <Setter Property="Command"
                Value="{Binding Path=DataContext.NavigateTo,
								RelativeSource={RelativeSource AncestorType={x:Type Grid}, AncestorLevel=2}}" />
        <Setter Property="TextDecorations" Value="{x:Null}" />
        <Setter Property="TextBlock.FontWeight" Value="Medium" />
        <Setter Property="Foreground" Value="{StaticResource HighlightBrush}" />
    </Style>

    <DataTemplate x:Key="ChannelTemplate"
                  DataType="models:GeneralChannelModel">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="15" />
                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>

            <Rectangle Height="15" Width="15" Fill="{StaticResource HighlightBrush}">
                <Rectangle.OpacityMask>
                    <ImageBrush
                        ImageSource="{Binding Path=Type, Mode=OneTime, Converter={StaticResource ChannelTypeToImageConverter}}" />
                </Rectangle.OpacityMask>
            </Rectangle>

            <TextBlock TextWrapping="Wrap"
                       Grid.Column="1"
                       Margin="2,0,0,0"
                       TextAlignment="Left"
                       MaxWidth="165">
                <Hyperlink CommandParameter="{Binding Path=Id, Mode=OneTime}"
                           Style="{StaticResource ChannelStyle}">
                    <Run Text="{Binding Path=Title, Mode=OneTime}" />
                    <Run Text="{Binding Path=DisplayNumber, Mode=OneWay}" />
                </Hyperlink>
            </TextBlock>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="UsernameTemplate"
                  DataType="models:CharacterModel">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="15" />
                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>

            <Rectangle Height="15" Width="15"
                       Fill="{Binding Converter={StaticResource GenderColorConverter}, Mode=OneWay}">
                <Rectangle.OpacityMask>
                    <ImageBrush
                        ImageSource="{Binding Path=Gender, Mode=OneTime, Converter={StaticResource GenderImageConverter}}" />
                </Rectangle.OpacityMask>
            </Rectangle>

            <TextBlock TextWrapping="Wrap"
                       Grid.Column="1">
                <Hyperlink CommandParameter="{Binding Path=Name, Mode=OneTime}"
                           Style="{StaticResource UsernameStyle}"
                           Foreground="{Binding Converter={StaticResource NameplateColorConverter}, Mode=OneWay}"
                           MouseRightButtonUp="OnMouseRightButtonUpForName">
                    <Run Text="{Binding Path=Name, Mode=OneTime}" />
                </Hyperlink>
            </TextBlock>

        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="UserIconTemplate"
                  DataType="models:CharacterModel">
        <TextBlock TextWrapping="Wrap"
                   Margin="0">
            <Hyperlink CommandParameter="{Binding Path=Name, Mode=OneTime}"
                       Style="{StaticResource UsernameStyle}"
                       Foreground="{Binding Converter={StaticResource NameplateColorConverter}, Mode=OneWay}"
                       MouseRightButtonUp="OnMouseRightButtonUpForIcon">
                <Image Source="{Binding Name, Converter={StaticResource CharacterAvatarConverter}, IsAsync=True}"
                       Height="50" Width="50" Margin="0" />
            </Hyperlink>
        </TextBlock>
    </DataTemplate>

    <DataTemplate x:Key="EIconTemplate"
                  DataType="models:CharacterModel">
        <Image Source="{Binding Converter={StaticResource EIconConverter}, IsAsync=True}"
               PreviewMouseLeftButtonUp="OnMemeExpand"
               Height="50" Width="50" Margin="0"
               ToolTip="{Binding}"/>
    </DataTemplate>

    <Style TargetType="Hyperlink" x:Key="Hyperlink">
        <Setter Property="Command"
                Value="{Binding Path=DataContext.NavigateTo,
								  RelativeSource={RelativeSource Mode=FindAncestor,
								  AncestorType={x:Type Grid}, AncestorLevel=2} }" />

        <Setter Property="Foreground" Value="{StaticResource HighlightBrush}" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="TextDecorations" Value="{x:Null}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="MenuItem" x:Key="MenuItemCopy">
        <Setter Property="Command"
                Value="{Binding Path=PlacementTarget.DataContext.CopyLink, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
        <Setter Property="Header" Value="Copy link address" />
    </Style>

    <ControlTemplate x:Key="GenderCheckBoxes" TargetType="ContentControl"
                     d:DataContext="{d:DesignInstance models:GenderSettingsModel}">
        <StackPanel Orientation="Vertical">
            <TextBlock Foreground="{StaticResource ForegroundBrush}"
                       Text="Show ..."
                       Margin="2,0" />
            <CheckBox IsChecked="{Binding ShowMales}">Males</CheckBox>
            <CheckBox IsChecked="{Binding ShowFemales}">Females</CheckBox>
            <CheckBox IsChecked="{Binding ShowMaleHerms}">Masculine Herms</CheckBox>
            <CheckBox IsChecked="{Binding ShowFemaleHerms}">Feminine Herms</CheckBox>
            <CheckBox IsChecked="{Binding ShowCuntboys}">Cuntboys</CheckBox>
            <CheckBox IsChecked="{Binding ShowTransgenders}">Transgenders</CheckBox>
            <CheckBox IsChecked="{Binding ShowShemales}">Shemales</CheckBox>
            <CheckBox IsChecked="{Binding ShowNoGenders}">Genderless</CheckBox>
        </StackPanel>
    </ControlTemplate>

    <ControlTemplate x:Key="GeneralFilterCheckBoxes" TargetType="ContentControl"
                     d:DataContext="{d:DesignInstance models:GenericSearchSettingsModel}">
        <StackPanel Orientation="Vertical">
            <TextBlock Foreground="{StaticResource ForegroundBrush}"
                       Text="Who are ..."
                       Margin="2,0" />
            <CheckBox IsChecked="{Binding ShowFriends}">Friends</CheckBox>
            <CheckBox IsChecked="{Binding ShowBookmarks}">Bookmarked</CheckBox>
            <CheckBox IsChecked="{Binding ShowMods}">Moderators</CheckBox>
            <CheckBox IsChecked="{Binding ShowLooking}">Looking For Play</CheckBox>
            <CheckBox IsChecked="{Binding ShowNormal}">Just Online</CheckBox>
            <CheckBox IsChecked="{Binding ShowBusyAway}">Busy or Away</CheckBox>
            <CheckBox IsChecked="{Binding ShowNotInterested}">Not Interesting</CheckBox>
            <CheckBox IsChecked="{Binding ShowDnd}">DND</CheckBox>
            <CheckBox IsChecked="{Binding ShowIgnored}">Ignored</CheckBox>
        </StackPanel>
    </ControlTemplate>

    <ControlTemplate x:Key="StatusCheckBoxes" TargetType="ContentControl"
                     d:DataContext="{d:DesignInstance models:GenericSearchSettingsModel}">
        <StackPanel Orientation="Vertical">
            <TextBlock Foreground="{StaticResource ForegroundBrush}"
                       Text="Who are ..."
                       Margin="2,0" />
            <CheckBox IsChecked="{Binding ShowLooking}">Looking For Play</CheckBox>
            <CheckBox IsChecked="{Binding ShowNormal}">Just Online</CheckBox>
            <CheckBox IsChecked="{Binding ShowBusyAway}">Busy or Away</CheckBox>
            <CheckBox IsChecked="{Binding ShowDnd}">DND</CheckBox>
        </StackPanel>
    </ControlTemplate>

    <Style x:Key="ActivatingToggleButton"
           TargetType="ToggleButton"
           BasedOn="{StaticResource ImageContentToggleButton}">
        <Style.Triggers>
            <Trigger Property="v:Properties.NeedsAttention" Value="True">
                <Setter Property="Foreground" Value="{StaticResource HighlightBrush}" />
            </Trigger>
            <Trigger Property="v:Properties.NeedsAttention" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DepressedBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Foreground" Value="{StaticResource HighlightBrush}" />
                <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
                <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type v:ImageTextBox}"
           TargetType="{x:Type v:ImageTextBox}"
           BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="LabelTextColor" Value="{StaticResource DepressedBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type v:ImageTextBox}">
                    <Border x:Name="Border"
                            Padding="2"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid x:Name="LayoutGrid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="22" />
                            </Grid.ColumnDefinitions>
                            <ScrollViewer x:Name="PART_ContentHost" Grid.Column="0" />
                            <Label x:Name="LabelText"
                                   Grid.Column="0"
                                   Foreground="{TemplateBinding Foreground}"
                                   Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=LabelText}"
                                   Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HasText, Converter={StaticResource OppositeBoolConverter}}"
                                   Padding="2,0,0,0"
                                   FontStyle="Italic" />
                            <Border x:Name="PART_SearchIconBorder"
                                    Grid.Column="1"
                                    BorderThickness="1"
                                    Padding="1"
                                    VerticalAlignment="Stretch"
                                    HorizontalAlignment="Stretch"
                                    BorderBrush="Transparent"
                                    Background="Transparent">
                                <Rectangle Fill="{TemplateBinding Foreground}"
                                           Height="15"
                                           Width="18"
                                           OpacityMask="{TemplateBinding IconSource, Converter={StaticResource ImagePathConverter}}" />
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="False">
                            <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource DepressedBrush}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource HighlightBrush}" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="LabelText" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Focusable" Value="False" />
                            <Setter Property="Background" TargetName="Border" Value="{StaticResource BackgroundBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
                            <Setter Property="Content" TargetName="LabelText" Value="Sent" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource DepressedBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource HighlightBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ItemsControl}" x:Key="NoScrollListBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <ItemsPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ItemsControl}" x:Key="HorizontalListBoxStyle" BasedOn="{StaticResource NoScrollListBox}">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal" IsItemsHost="True" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ItemsControl" x:Key="AvatarBoxStyle">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />

        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal" IsItemsHost="True" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate DataType="models:CharacterModel">
                    <StackPanel Cursor="Hand"
                                Margin="5">
                        <StackPanel.Style>
                            <Style TargetType="StackPanel">
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="TextBlock.Foreground"
                                                Value="{StaticResource HighlightBrush}" />
                                        <Setter Property="Opacity" Value="1" />
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="False">
                                        <Setter Property="Opacity"
                                                Value="{Binding Path=Status, Converter={StaticResource CharacterStatusOpacityConverter}}" />
                                        <Setter Property="TextBlock.Foreground"
                                                Value="{StaticResource ForegroundBrush}" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                        <Border BorderThickness="0,0,0,3"
                                BorderBrush="{Binding Path=Status, Mode=OneWay, Converter={StaticResource UserStatusColorConverter}}">
                            <Image Source="{Binding Path=Avatar}"
                                   Height="75"
                                   Width="75" />
                        </Border>

                        <TextBlock Text="{Binding Path=Name}"
                                   Padding="2"
                                   FontSize="14"
                                   FontWeight="Medium"
                                   MaxWidth="100"
                                   TextWrapping="Wrap"
                                   IsHyphenationEnabled="True"
                                   HorizontalAlignment="Center" />

                        <StackPanel.InputBindings>
                            <MouseBinding MouseAction="RightClick"
                                          Command="{Binding Path=DataContext.OpenRightClickMenuCommand,
                                                                RelativeSource={RelativeSource AncestorType={x:Type Grid},AncestorLevel=2}}"
                                          CommandParameter="{Binding Path=Name, Mode=OneTime}" />

                            <MouseBinding MouseAction="LeftClick"
                                          Command="{Binding Path=DataContext.RequestPmCommand,
                                                                RelativeSource={RelativeSource AncestorType={x:Type Grid},AncestorLevel=2}}"
                                          CommandParameter="{Binding Path=Name, Mode=OneTime}" />
                        </StackPanel.InputBindings>
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="GridSplitter">
        <Setter Property="BorderThickness" Value="1.5" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="ResizeDirection" Value="Rows" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="BorderBrush" Value="{StaticResource DepressedBrush}" />
                <Setter Property="Opacity" Value="0.5" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource HighlightBrush}" />
                <Setter Property="Opacity" Value="1" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Theme for Flowdocument reader
         Warning: This was reflected out of an assembly
         So it's very ugly and long and makes visual studio unhappy.

    But works. -->

    <Style TargetType="{x:Type FlowDocumentReader}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type FlowDocumentReader}">
                    <DockPanel Language="en-us" LastChildFill="True" Uid="DockPanel_3">
                        <Grid Background="{TemplateBinding Background}" DockPanel.Dock="Bottom"
                              HorizontalAlignment="Stretch" Uid="Grid_31">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <StackPanel Grid.Column="0" Orientation="Horizontal" Uid="StackPanel_5">
                                <ToggleButton x:Name="FindButton" Command="ApplicationCommands.Find" Focusable="False"
                                              Margin="3,0" ToolTip="Find" Uid="ToggleButton_1">
                                    <ToggleButton.Style>
                                        <Style TargetType="{x:Type ToggleButton}">
                                            <Style.BasedOn>
                                                <Style TargetType="{x:Type ButtonBase}">
                                                    <Setter Property="Focusable" Value="False" />
                                                    <Setter Property="Opacity" Value="0.5" />
                                                    <Setter Property="Cursor" Value="Hand" />
                                                    <Setter Property="Background" Value="Transparent" />
                                                    <Setter Property="Padding" Value="3,1" />
                                                    <Setter Property="BorderBrush" Value="{x:Null}" />
                                                    <Setter Property="BorderThickness" Value="0" />
                                                    <Setter Property="MinWidth" Value="0" />
                                                    <Setter Property="MinHeight" Value="0" />
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                                <Border Background="{TemplateBinding Background}"
                                                                        Uid="Border_39">
                                                                    <ContentPresenter x:Name="Content"
                                                                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                      Content="{TemplateBinding Content}"
                                                                                      ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                                      RenderTransformOrigin="0.5,0.5"
                                                                                      Uid="ContentPresenter_2" />
                                                                </Border>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="RenderTransform"
                                                                                TargetName="Content">
                                                                            <Setter.Value>
                                                                                <ScaleTransform ScaleY="1.1"
                                                                                                ScaleX="1.1" />
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Trigger>
                                                                    <Trigger Property="IsPressed" Value="True">
                                                                        <Setter Property="RenderTransform"
                                                                                TargetName="Content">
                                                                            <Setter.Value>
                                                                                <ScaleTransform ScaleY="0.9"
                                                                                                ScaleX="0.9" />
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Style.Triggers>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Opacity" Value="0.3" />
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Opacity" Value="1" />
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Style.BasedOn>
                                            <Style.Triggers>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </Trigger>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="Opacity" Value="1" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ToggleButton.Style>
                                    <Path Stroke="{TemplateBinding Foreground}" Uid="Path_23"
                                          VerticalAlignment="Center">
                                        <Path.Data>
                                            <GeometryGroup>
                                                <RectangleGeometry RadiusY="1" RadiusX="1" Rect="0.5,0.5,19,19" />
                                                <EllipseGeometry Center="12,8" RadiusY="5" RadiusX="5" />
                                                <EllipseGeometry Center="12,8" RadiusY="4" RadiusX="4" />
                                                <LineGeometry EndPoint="9,10" StartPoint="2.5,16.5" />
                                                <LineGeometry EndPoint="9.5,10.5" StartPoint="3,17" />
                                                <LineGeometry EndPoint="10,11" StartPoint="3.5,17.5" />
                                            </GeometryGroup>
                                        </Path.Data>
                                    </Path>
                                </ToggleButton>
                                <Border x:Name="PART_FindToolBarHost" HorizontalAlignment="Left" Uid="Border_64"
                                        Visibility="Collapsed" VerticalAlignment="Center" />
                            </StackPanel>

                            <StackPanel x:Name="PageCountAndButtons" Grid.Column="1" HorizontalAlignment="Center"
                                        Orientation="Horizontal" Uid="StackPanel_3" VerticalAlignment="Center">
                                <RepeatButton Command="NavigationCommands.PreviousPage" Focusable="False"
                                              IsEnabled="{TemplateBinding CanGoToPreviousPage}" ToolTip="Previous Page"
                                              Uid="RepeatButton_3">
                                    <RepeatButton.Style>
                                        <Style TargetType="{x:Type RepeatButton}">
                                            <Setter Property="Padding" Value="5" />
                                            <Setter Property="Delay" Value="1000" />
                                            <Setter Property="Interval" Value="250" />
                                            <Style.BasedOn>
                                                <Style TargetType="{x:Type ButtonBase}">
                                                    <Setter Property="Focusable" Value="False" />
                                                    <Setter Property="Cursor" Value="Hand" />
                                                    <Setter Property="Background" Value="Transparent" />
                                                    <Setter Property="Padding" Value="3,1" />
                                                    <Setter Property="BorderBrush" Value="{x:Null}" />
                                                    <Setter Property="BorderThickness" Value="0" />
                                                    <Setter Property="MinWidth" Value="0" />
                                                    <Setter Property="MinHeight" Value="0" />
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                                <Border Background="{TemplateBinding Background}"
                                                                        Uid="Border_39">
                                                                    <Viewbox x:Name="Content"
                                                                             Height="{TemplateBinding FontSize}"
                                                                             Uid="Viewbox_5">
                                                                        <Path x:Name="ArrowLeft"
                                                                              Data="M5,0 L5,10 L0,5 z"
                                                                              Fill="{StaticResource BrightBackgroundBrush}"
                                                                              Uid="Path_15" />
                                                                    </Viewbox>
                                                                </Border>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="Fill"
                                                                                Value="{StaticResource HighlightBrush}"
                                                                                TargetName="ArrowLeft" />
                                                                    </Trigger>

                                                                    <Trigger Property="IsPressed" Value="True">
                                                                        <Setter Property="RenderTransform"
                                                                                TargetName="Content">
                                                                            <Setter.Value>
                                                                                <ScaleTransform ScaleY="0.9"
                                                                                                ScaleX="0.9" />
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Style.Triggers>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Opacity" Value="0.3" />
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Style.BasedOn>
                                        </Style>
                                    </RepeatButton.Style>
                                </RepeatButton>

                                <TextBlock HorizontalAlignment="Center" Uid="TextBlock_5" VerticalAlignment="Center"
                                           Foreground="{StaticResource BrightBackgroundBrush}">
                                    <Run Text=" " />
                                    <Run Text=" " />
                                    <InlineUIContainer>
                                        <TextBlock
                                            Text="{Binding PageNumber, RelativeSource={RelativeSource TemplatedParent}}"
                                            Uid="TextBlock_6" />
                                    </InlineUIContainer>

                                    <Run Text=" " />
                                    <Run Text=" of " />
                                    <Run Text=" " />

                                    <InlineUIContainer>
                                        <TextBlock
                                            Text="{Binding PageCount, RelativeSource={RelativeSource TemplatedParent}}"
                                            Uid="TextBlock_7" />
                                    </InlineUIContainer>
                                    <Run Text=" " />
                                    <Run Text=" " />
                                </TextBlock>

                                <RepeatButton Command="NavigationCommands.NextPage" Focusable="False"
                                              IsEnabled="{TemplateBinding CanGoToNextPage}" ToolTip="Next Page"
                                              Uid="RepeatButton_4">
                                    <RepeatButton.Style>
                                        <Style TargetType="{x:Type RepeatButton}">
                                            <Setter Property="Padding" Value="5" />
                                            <Setter Property="Delay" Value="1000" />
                                            <Setter Property="Interval" Value="250" />
                                            <Style.BasedOn>
                                                <Style TargetType="{x:Type ButtonBase}">
                                                    <Setter Property="Focusable" Value="False" />
                                                    <Setter Property="Cursor" Value="Hand" />
                                                    <Setter Property="Background" Value="Transparent" />
                                                    <Setter Property="Padding" Value="3,1" />
                                                    <Setter Property="BorderBrush" Value="{x:Null}" />
                                                    <Setter Property="BorderThickness" Value="0" />
                                                    <Setter Property="MinWidth" Value="0" />
                                                    <Setter Property="MinHeight" Value="0" />
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                                <Border Background="{TemplateBinding Background}"
                                                                        Uid="Border_39">
                                                                    <Viewbox x:Name="Content"
                                                                             Height="{TemplateBinding FontSize}"
                                                                             Uid="Viewbox_6">
                                                                        <Path x:Name="ArrowRight"
                                                                              Data="M0,0 L0,10 L5,5 z"
                                                                              Fill="{StaticResource BrightBackgroundBrush}"
                                                                              Uid="Path_16" />
                                                                    </Viewbox>
                                                                </Border>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="Fill"
                                                                                Value="{StaticResource HighlightBrush}"
                                                                                TargetName="ArrowRight" />
                                                                    </Trigger>

                                                                    <Trigger Property="IsPressed" Value="True">
                                                                        <Setter Property="RenderTransform"
                                                                                TargetName="Content">
                                                                            <Setter.Value>
                                                                                <ScaleTransform ScaleY="0.9"
                                                                                                ScaleX="0.9" />
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Style.Triggers>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Opacity" Value="0.3" />
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Opacity" Value="1" />
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Style.BasedOn>
                                        </Style>
                                    </RepeatButton.Style>
                                </RepeatButton>
                            </StackPanel>


                            <Grid Grid.Column="2" HorizontalAlignment="Right" Uid="Grid_24" VerticalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <StackPanel Orientation="Horizontal" Uid="StackPanel_4">
                                    <RadioButton x:Name="PageViewButton" CommandParameter="Page"
                                                 Command="FlowDocumentReader.SwitchViewingModeCommand"
                                                 GroupName="ViewingMode"
                                                 IsEnabled="{TemplateBinding IsPageViewEnabled}" ToolTip="Page Mode"
                                                 Uid="RadioButton_1">
                                        <RadioButton.Style>
                                            <Style TargetType="{x:Type RadioButton}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type RadioButton}">
                                                            <Border BorderBrush="{TemplateBinding BorderBrush}"
                                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                                    Background="{TemplateBinding Background}"
                                                                    Padding="{TemplateBinding Padding}" Uid="Border_40">
                                                                <ContentPresenter x:Name="Content"
                                                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                  Content="{TemplateBinding Content}"
                                                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                                  RenderTransformOrigin="0.5,0.5"
                                                                                  Uid="ContentPresenter_3" />
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="RenderTransform"
                                                                            TargetName="Content">
                                                                        <Setter.Value>
                                                                            <ScaleTransform ScaleY="0.9" ScaleX="0.9" />
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Style.BasedOn>
                                                    <Style TargetType="{x:Type ToggleButton}">
                                                        <Style.BasedOn>
                                                            <Style TargetType="{x:Type ButtonBase}">
                                                                <Setter Property="Focusable" Value="False" />
                                                                <Setter Property="Opacity" Value="0.5" />
                                                                <Setter Property="Cursor" Value="Hand" />
                                                                <Setter Property="Background" Value="Transparent" />
                                                                <Setter Property="Padding" Value="3,1" />
                                                                <Setter Property="BorderBrush" Value="{x:Null}" />
                                                                <Setter Property="BorderThickness" Value="0" />
                                                                <Setter Property="MinWidth" Value="0" />
                                                                <Setter Property="MinHeight" Value="0" />
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate
                                                                            TargetType="{x:Type ButtonBase}">
                                                                            <Border
                                                                                Background="{TemplateBinding Background}"
                                                                                Uid="Border_39">
                                                                                <ContentPresenter x:Name="Content"
                                                                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                                  Content="{TemplateBinding Content}"
                                                                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                                                  RenderTransformOrigin="0.5,0.5"
                                                                                                  Uid="ContentPresenter_2" />
                                                                            </Border>
                                                                            <ControlTemplate.Triggers>
                                                                                <Trigger Property="IsPressed"
                                                                                         Value="True">
                                                                                    <Setter Property="RenderTransform"
                                                                                            TargetName="Content">
                                                                                        <Setter.Value>
                                                                                            <ScaleTransform
                                                                                                ScaleY="0.9"
                                                                                                ScaleX="0.9" />
                                                                                        </Setter.Value>
                                                                                    </Setter>
                                                                                </Trigger>
                                                                            </ControlTemplate.Triggers>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Style.Triggers>
                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                        <Setter Property="Opacity" Value="0.3" />
                                                                    </Trigger>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="Opacity" Value="1" />
                                                                    </Trigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Style.BasedOn>
                                                        <Style.Triggers>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Visibility" Value="Collapsed" />
                                                            </Trigger>
                                                            <Trigger Property="IsChecked" Value="True">
                                                                <Setter Property="Opacity" Value="1" />
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Style.BasedOn>
                                            </Style>
                                        </RadioButton.Style>
                                        <Path Stroke="{TemplateBinding Foreground}" Uid="Path_20"
                                              VerticalAlignment="Center">
                                            <Path.Data>
                                                <GeometryGroup>
                                                    <RectangleGeometry RadiusY="1" RadiusX="1" Rect="0.5,0.5,19,19" />
                                                    <RectangleGeometry Rect="4.5,3.5,11,13" />
                                                    <LineGeometry EndPoint="15.5,4.5" StartPoint="4.5,4.5" />
                                                    <LineGeometry EndPoint="15.5,6.5" StartPoint="4.5,6.5" />
                                                    <LineGeometry EndPoint="15.5,8.5" StartPoint="4.5,8.5" />
                                                    <LineGeometry EndPoint="15.5,10.5" StartPoint="4.5,10.5" />
                                                    <LineGeometry EndPoint="15.5,12.5" StartPoint="4.5,12.5" />
                                                    <LineGeometry EndPoint="15.5,14.5" StartPoint="4.5,14.5" />
                                                </GeometryGroup>
                                            </Path.Data>
                                        </Path>
                                    </RadioButton>

                                    <RadioButton x:Name="TwoPageViewButton" CommandParameter="TwoPage"
                                                 Command="FlowDocumentReader.SwitchViewingModeCommand"
                                                 GroupName="ViewingMode"
                                                 IsEnabled="{TemplateBinding IsTwoPageViewEnabled}"
                                                 ToolTip="Two Page Mode" Uid="RadioButton_2">
                                        <RadioButton.Style>
                                            <Style TargetType="{x:Type RadioButton}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type RadioButton}">
                                                            <Border BorderBrush="{TemplateBinding BorderBrush}"
                                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                                    Background="{TemplateBinding Background}"
                                                                    Padding="{TemplateBinding Padding}" Uid="Border_40">
                                                                <ContentPresenter x:Name="Content"
                                                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                  Content="{TemplateBinding Content}"
                                                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                                  RenderTransformOrigin="0.5,0.5"
                                                                                  Uid="ContentPresenter_3" />
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="RenderTransform"
                                                                            TargetName="Content">
                                                                        <Setter.Value>
                                                                            <ScaleTransform ScaleY="0.9" ScaleX="0.9" />
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Style.BasedOn>
                                                    <Style TargetType="{x:Type ToggleButton}">
                                                        <Style.BasedOn>
                                                            <Style TargetType="{x:Type ButtonBase}">
                                                                <Setter Property="Focusable" Value="False" />
                                                                <Setter Property="Opacity" Value="0.5" />
                                                                <Setter Property="Cursor" Value="Hand" />
                                                                <Setter Property="Background" Value="Transparent" />
                                                                <Setter Property="Padding" Value="3,1" />
                                                                <Setter Property="BorderBrush" Value="{x:Null}" />
                                                                <Setter Property="BorderThickness" Value="0" />
                                                                <Setter Property="MinWidth" Value="0" />
                                                                <Setter Property="MinHeight" Value="0" />
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate
                                                                            TargetType="{x:Type ButtonBase}">
                                                                            <Border
                                                                                Background="{TemplateBinding Background}"
                                                                                Uid="Border_39">
                                                                                <ContentPresenter x:Name="Content"
                                                                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                                  Content="{TemplateBinding Content}"
                                                                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                                                  RenderTransformOrigin="0.5,0.5"
                                                                                                  Uid="ContentPresenter_2" />
                                                                            </Border>
                                                                            <ControlTemplate.Triggers>
                                                                                <Trigger Property="IsPressed"
                                                                                         Value="True">
                                                                                    <Setter Property="RenderTransform"
                                                                                            TargetName="Content">
                                                                                        <Setter.Value>
                                                                                            <ScaleTransform
                                                                                                ScaleY="0.9"
                                                                                                ScaleX="0.9" />
                                                                                        </Setter.Value>
                                                                                    </Setter>
                                                                                </Trigger>
                                                                            </ControlTemplate.Triggers>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Style.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="Foreground"
                                                                                Value="{StaticResource HighlightBrush}" />
                                                                    </Trigger>
                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                        <Setter Property="Opacity" Value="0.3" />
                                                                    </Trigger>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="Opacity" Value="1" />
                                                                    </Trigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Style.BasedOn>
                                                        <Style.Triggers>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Visibility" Value="Collapsed" />
                                                            </Trigger>
                                                            <Trigger Property="IsChecked" Value="True">
                                                                <Setter Property="Opacity" Value="1" />
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Style.BasedOn>
                                            </Style>
                                        </RadioButton.Style>
                                        <Path Stroke="{TemplateBinding Foreground}" Uid="Path_21"
                                              VerticalAlignment="Center">
                                            <Path.Data>
                                                <GeometryGroup>
                                                    <RectangleGeometry RadiusY="1" RadiusX="1" Rect="0.5,0.5,19,19" />
                                                    <RectangleGeometry Rect="3.5,3.5,5,13" />
                                                    <LineGeometry EndPoint="8.5,4.5" StartPoint="3.5,4.5" />
                                                    <LineGeometry EndPoint="8.5,6.5" StartPoint="3.5,6.5" />
                                                    <LineGeometry EndPoint="8.5,8.5" StartPoint="3.5,8.5" />
                                                    <LineGeometry EndPoint="8.5,10.5" StartPoint="3.5,10.5" />
                                                    <LineGeometry EndPoint="8.5,12.5" StartPoint="3.5,12.5" />
                                                    <LineGeometry EndPoint="8.5,14.5" StartPoint="3.5,14.5" />
                                                    <RectangleGeometry Rect="11.5,3.5,5,13" />
                                                    <LineGeometry EndPoint="16.5,4.5" StartPoint="11.5,4.5" />
                                                    <LineGeometry EndPoint="16.5,6.5" StartPoint="11.5,6.5" />
                                                    <LineGeometry EndPoint="16.5,8.5" StartPoint="11.5,8.5" />
                                                    <LineGeometry EndPoint="16.5,10.5" StartPoint="11.5,10.5" />
                                                    <LineGeometry EndPoint="16.5,12.5" StartPoint="11.5,12.5" />
                                                    <LineGeometry EndPoint="16.5,14.5" StartPoint="11.5,14.5" />
                                                </GeometryGroup>
                                            </Path.Data>
                                        </Path>
                                    </RadioButton>

                                    <RadioButton x:Name="ScrollViewButton" CommandParameter="Scroll"
                                                 Command="FlowDocumentReader.SwitchViewingModeCommand"
                                                 GroupName="ViewingMode"
                                                 IsEnabled="{TemplateBinding IsScrollViewEnabled}"
                                                 ToolTip="Scroll Mode" Uid="RadioButton_3">
                                        <RadioButton.Style>
                                            <Style TargetType="{x:Type RadioButton}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type RadioButton}">
                                                            <Border BorderBrush="{TemplateBinding BorderBrush}"
                                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                                    Background="{TemplateBinding Background}"
                                                                    Padding="{TemplateBinding Padding}" Uid="Border_40">
                                                                <ContentPresenter x:Name="Content"
                                                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                  Content="{TemplateBinding Content}"
                                                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                                  RenderTransformOrigin="0.5,0.5"
                                                                                  Uid="ContentPresenter_3" />
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="RenderTransform"
                                                                            TargetName="Content">
                                                                        <Setter.Value>
                                                                            <ScaleTransform ScaleY="0.9" ScaleX="0.9" />
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Style.BasedOn>
                                                    <Style TargetType="{x:Type ToggleButton}">
                                                        <Style.BasedOn>
                                                            <Style TargetType="{x:Type ButtonBase}">
                                                                <Setter Property="Focusable" Value="False" />
                                                                <Setter Property="Opacity" Value="0.5" />
                                                                <Setter Property="Cursor" Value="Hand" />
                                                                <Setter Property="Background" Value="Transparent" />
                                                                <Setter Property="Padding" Value="3,1" />
                                                                <Setter Property="BorderBrush" Value="{x:Null}" />
                                                                <Setter Property="BorderThickness" Value="0" />
                                                                <Setter Property="MinWidth" Value="0" />
                                                                <Setter Property="MinHeight" Value="0" />
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate
                                                                            TargetType="{x:Type ButtonBase}">
                                                                            <Border
                                                                                Background="{TemplateBinding Background}"
                                                                                Uid="Border_39">
                                                                                <ContentPresenter x:Name="Content"
                                                                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                                  Content="{TemplateBinding Content}"
                                                                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                                                  RenderTransformOrigin="0.5,0.5"
                                                                                                  Uid="ContentPresenter_2" />
                                                                            </Border>
                                                                            <ControlTemplate.Triggers>
                                                                                <Trigger Property="IsPressed"
                                                                                         Value="True">
                                                                                    <Setter Property="RenderTransform"
                                                                                            TargetName="Content">
                                                                                        <Setter.Value>
                                                                                            <ScaleTransform
                                                                                                ScaleY="0.9"
                                                                                                ScaleX="0.9" />
                                                                                        </Setter.Value>
                                                                                    </Setter>
                                                                                </Trigger>
                                                                            </ControlTemplate.Triggers>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Style.Triggers>
                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                        <Setter Property="Opacity" Value="0.3" />
                                                                    </Trigger>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="Opacity" Value="1" />
                                                                    </Trigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Style.BasedOn>
                                                        <Style.Triggers>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Visibility" Value="Collapsed" />
                                                            </Trigger>
                                                            <Trigger Property="IsChecked" Value="True">
                                                                <Setter Property="Opacity" Value="1" />
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Style.BasedOn>
                                            </Style>
                                        </RadioButton.Style>
                                        <Path Stroke="{TemplateBinding Foreground}" Uid="Path_22"
                                              VerticalAlignment="Center">
                                            <Path.Data>
                                                <GeometryGroup>
                                                    <RectangleGeometry RadiusY="1" RadiusX="1" Rect="0.5,0.5,19,19" />
                                                    <RectangleGeometry Rect="3.5,3.5,8,13" />
                                                    <LineGeometry EndPoint="11.5,4.5" StartPoint="3.5,4.5" />
                                                    <LineGeometry EndPoint="11.5,6.5" StartPoint="3.5,6.5" />
                                                    <LineGeometry EndPoint="11.5,8.5" StartPoint="3.5,8.5" />
                                                    <LineGeometry EndPoint="11.5,10.5" StartPoint="3.5,10.5" />
                                                    <LineGeometry EndPoint="11.5,12.5" StartPoint="3.5,12.5" />
                                                    <LineGeometry EndPoint="11.5,14.5" StartPoint="3.5,14.5" />
                                                    <RectangleGeometry Rect="13.5,3.5,3,13" />
                                                    <RectangleGeometry Rect="14.5,4.5,1,3" />
                                                    <RectangleGeometry Rect="14.5,12.5,1,3" />
                                                </GeometryGroup>
                                            </Path.Data>
                                        </Path>
                                    </RadioButton>
                                </StackPanel>

                                <RepeatButton BorderBrush="{TemplateBinding BorderBrush}" Grid.Column="1"
                                              Command="NavigationCommands.DecreaseZoom"
                                              Foreground="{TemplateBinding Foreground}" Focusable="False"
                                              Height="{TemplateBinding FontSize}"
                                              IsEnabled="{TemplateBinding CanDecreaseZoom}" ToolTip="Decrease Zoom"
                                              Uid="RepeatButton_5" Width="{TemplateBinding FontSize}">
                                    <RepeatButton.LayoutTransform>
                                        <ScaleTransform ScaleY="2.2" ScaleX="2.2" />
                                    </RepeatButton.LayoutTransform>
                                    <RepeatButton.Style>
                                        <Style TargetType="{x:Type RepeatButton}">
                                            <Setter Property="Padding" Value="2,2,0,2" />
                                            <Setter Property="Cursor" Value="Hand" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                        <Border Background="Transparent"
                                                                Padding="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}}"
                                                                Uid="Border_41">
                                                            <Viewbox x:Name="Content" RenderTransformOrigin="0.5,0.5"
                                                                     Uid="Viewbox_2">
                                                                <Canvas Height="32" Uid="Canvas_4" Width="32">
                                                                    <Path x:Name="Cross" Canvas.Left="16"
                                                                          Stroke="{StaticResource BrightBackgroundBrush}"
                                                                          StrokeThickness="5" Canvas.Top="16"
                                                                          Uid="Path_9">
                                                                        <Path.Data>
                                                                            <LineGeometry EndPoint="10,0"
                                                                                          StartPoint="-10,0" />
                                                                        </Path.Data>
                                                                    </Path>
                                                                </Canvas>
                                                            </Viewbox>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Stroke" TargetName="Cross"
                                                                        Value="{StaticResource HighlightBrush}" />
                                                            </Trigger>
                                                            <Trigger Property="IsPressed" Value="True">
                                                                <Setter Property="RenderTransform" TargetName="Content">
                                                                    <Setter.Value>
                                                                        <ScaleTransform ScaleY="0.9" ScaleX="0.9" />
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </RepeatButton.Style>
                                </RepeatButton>

                                <Slider Grid.Column="2" Focusable="False" FontSize="{TemplateBinding FontSize}"
                                        HorizontalAlignment="Stretch" LargeChange="{TemplateBinding ZoomIncrement}"
                                        Maximum="{TemplateBinding MaxZoom}" Minimum="{TemplateBinding MinZoom}"
                                        SmallChange="{TemplateBinding ZoomIncrement}"
                                        TickFrequency="{TemplateBinding ZoomIncrement}" Uid="Slider_1"
                                        Value="{Binding Zoom, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                        VerticalAlignment="Center" Width="100">
                                    <Slider.Style>
                                        <Style TargetType="{x:Type Slider}">
                                            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
                                            <Setter Property="Focusable" Value="False" />
                                            <Setter Property="OverridesDefaultStyle" Value="True" />
                                            <Setter Property="Background"
                                                    Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" />
                                            <Setter Property="BorderThickness" Value="1" />
                                            <Setter Property="BorderBrush" Value="#00000000" />
                                            <Setter Property="Foreground"
                                                    Value="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" />
                                            <Setter Property="IsSnapToTickEnabled" Value="True" />
                                            <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
                                            <Setter Property="MinWidth" Value="50" />
                                            <Setter Property="MinHeight" Value="0" />
                                            <Setter Property="Width" Value="Auto" />
                                            <Setter Property="Padding" Value="2,0" />
                                            <Setter Property="Height" Value="Auto" />
                                            <Setter Property="Opacity" Value="0.95" />
                                            <Setter Property="Delay" Value="1000" />
                                            <Setter Property="Interval" Value="250" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Slider}">
                                                        <Border Background="Transparent"
                                                                Padding="{TemplateBinding Padding}" Uid="Border_45">
                                                            <Grid ClipToBounds="False" Uid="Grid_22">
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="*" />
                                                                </Grid.ColumnDefinitions>
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition Height="Auto" />
                                                                    <RowDefinition Height="Auto"
                                                                                   MinHeight="{TemplateBinding MinHeight}" />
                                                                    <RowDefinition Height="Auto" />
                                                                    <RowDefinition Height="*" />
                                                                </Grid.RowDefinitions>
                                                                <TickBar x:Name="TopTick"
                                                                         Fill="{TemplateBinding Foreground}" Height="4"
                                                                         Placement="Top" Grid.Row="0" Uid="TickBar_1"
                                                                         Visibility="Collapsed" />
                                                                <Border Background="{TemplateBinding Foreground}"
                                                                        CornerRadius="2" Height="2" Opacity="0.5"
                                                                        Grid.Row="1" Uid="Border_46" />
                                                                <Canvas Height="4" Grid.Row="1" Uid="Canvas_7"
                                                                        VerticalAlignment="Center">
                                                                    <Rectangle x:Name="PART_SelectionRange"
                                                                               Fill="{TemplateBinding Foreground}"
                                                                               Height="2" Canvas.Top="1"
                                                                               Uid="Rectangle_17" Visibility="Hidden" />
                                                                </Canvas>
                                                                <Track x:Name="PART_Track" Grid.Row="1"
                                                                       Uid="PART_Track">
                                                                    <Track.DecreaseRepeatButton>
                                                                        <RepeatButton Command="Slider.DecreaseLarge"
                                                                                      Uid="RepeatButton_1">
                                                                            <RepeatButton.Style>
                                                                                <Style
                                                                                    TargetType="{x:Type RepeatButton}">
                                                                                    <Setter
                                                                                        Property="OverridesDefaultStyle"
                                                                                        Value="True" />
                                                                                    <Setter Property="IsTabStop"
                                                                                            Value="False" />
                                                                                    <Setter Property="Focusable"
                                                                                            Value="False" />
                                                                                    <Setter Property="Template">
                                                                                        <Setter.Value>
                                                                                            <ControlTemplate
                                                                                                TargetType="{x:Type RepeatButton}">
                                                                                                <Border
                                                                                                    Background="Transparent"
                                                                                                    Uid="Border_43" />
                                                                                            </ControlTemplate>
                                                                                        </Setter.Value>
                                                                                    </Setter>
                                                                                </Style>
                                                                            </RepeatButton.Style>
                                                                        </RepeatButton>
                                                                    </Track.DecreaseRepeatButton>
                                                                    <Track.IncreaseRepeatButton>
                                                                        <RepeatButton Command="Slider.IncreaseLarge"
                                                                                      Uid="RepeatButton_2">
                                                                            <RepeatButton.Style>
                                                                                <Style
                                                                                    TargetType="{x:Type RepeatButton}">
                                                                                    <Setter
                                                                                        Property="OverridesDefaultStyle"
                                                                                        Value="True" />
                                                                                    <Setter Property="IsTabStop"
                                                                                            Value="False" />
                                                                                    <Setter Property="Focusable"
                                                                                            Value="False" />
                                                                                    <Setter Property="Template">
                                                                                        <Setter.Value>
                                                                                            <ControlTemplate
                                                                                                TargetType="{x:Type RepeatButton}">
                                                                                                <Border
                                                                                                    Background="Transparent"
                                                                                                    Uid="Border_43" />
                                                                                            </ControlTemplate>
                                                                                        </Setter.Value>
                                                                                    </Setter>
                                                                                </Style>
                                                                            </RepeatButton.Style>
                                                                        </RepeatButton>
                                                                    </Track.IncreaseRepeatButton>
                                                                    <Track.Thumb>
                                                                        <Thumb
                                                                            Background="{TemplateBinding Background}"
                                                                            Uid="Thumb_5">
                                                                            <Thumb.Style>
                                                                                <Style TargetType="{x:Type Thumb}">
                                                                                    <Setter Property="Background"
                                                                                            Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" />
                                                                                    <Setter Property="Focusable"
                                                                                            Value="False" />
                                                                                    <Setter
                                                                                        Property="OverridesDefaultStyle"
                                                                                        Value="True" />
                                                                                    <Setter Property="Cursor"
                                                                                            Value="Hand" />
                                                                                    <Setter Property="Padding"
                                                                                            Value="6" />
                                                                                    <Setter Property="Template">
                                                                                        <Setter.Value>
                                                                                            <ControlTemplate
                                                                                                TargetType="{x:Type Thumb}">
                                                                                                <Border
                                                                                                    Background="Transparent"
                                                                                                    Margin="-2"
                                                                                                    Padding="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}}"
                                                                                                    Uid="Border_44">
                                                                                                    <Viewbox
                                                                                                        HorizontalAlignment="Center"
                                                                                                        Uid="Viewbox_4"
                                                                                                        VerticalAlignment="Center"
                                                                                                        Width="{Binding FontSize, RelativeSource={RelativeSource TemplatedParent}}">
                                                                                                        <Viewbox.LayoutTransform>
                                                                                                            <ScaleTransform
                                                                                                                ScaleY="1"
                                                                                                                ScaleX="1" />
                                                                                                        </Viewbox.LayoutTransform>
                                                                                                        <Canvas
                                                                                                            Height="17"
                                                                                                            Uid="Canvas_6"
                                                                                                            Width="13">
                                                                                                            <Path
                                                                                                                Data="F1 M1,0 L10,0 L11,1 L11,13 L6.5,17 L4.5,17 L0,13 L0,1 L1,0 z"
                                                                                                                Fill="{StaticResource DepressedBrush}"
                                                                                                                x:Name="Tick"
                                                                                                                Uid="Path_13" />
                                                                                                        </Canvas>
                                                                                                    </Viewbox>
                                                                                                </Border>
                                                                                                <ControlTemplate.Triggers>
                                                                                                    <Trigger
                                                                                                        Property="IsMouseOver"
                                                                                                        Value="True">
                                                                                                        <Setter
                                                                                                            Property="Fill"
                                                                                                            TargetName="Tick"
                                                                                                            Value="{StaticResource HighlightBrush}" />
                                                                                                    </Trigger>
                                                                                                </ControlTemplate.Triggers>
                                                                                            </ControlTemplate>
                                                                                        </Setter.Value>
                                                                                    </Setter>
                                                                                </Style>
                                                                            </Thumb.Style>
                                                                        </Thumb>
                                                                    </Track.Thumb>
                                                                </Track>
                                                                <TickBar x:Name="BottomTick"
                                                                         Fill="{TemplateBinding Foreground}" Height="4"
                                                                         Placement="Bottom" Grid.Row="2"
                                                                         Uid="TickBar_2" Visibility="Collapsed" />
                                                            </Grid>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="TickPlacement" Value="TopLeft">
                                                                <Setter Property="Visibility" TargetName="TopTick"
                                                                        Value="Visible" />
                                                            </Trigger>
                                                            <Trigger Property="TickPlacement" Value="BottomRight">
                                                                <Setter Property="Visibility" TargetName="BottomTick"
                                                                        Value="Visible" />
                                                            </Trigger>
                                                            <Trigger Property="TickPlacement" Value="Both">
                                                                <Setter Property="Visibility" TargetName="TopTick"
                                                                        Value="Visible" />
                                                                <Setter Property="Visibility" TargetName="BottomTick"
                                                                        Value="Visible" />
                                                            </Trigger>
                                                            <Trigger Property="IsSelectionRangeEnabled" Value="True">
                                                                <Setter Property="Visibility"
                                                                        TargetName="PART_SelectionRange"
                                                                        Value="Visible" />
                                                            </Trigger>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Opacity" Value="1" />
                                                            </Trigger>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Opacity" Value="0.3" />
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Slider.Style>
                                </Slider>

                                <RepeatButton BorderBrush="{TemplateBinding BorderBrush}" Grid.Column="3"
                                              Command="NavigationCommands.IncreaseZoom"
                                              Foreground="{TemplateBinding Foreground}" Focusable="False"
                                              Height="{TemplateBinding FontSize}"
                                              IsEnabled="{TemplateBinding CanIncreaseZoom}" ToolTip="Increase Zoom"
                                              Uid="RepeatButton_6" Width="{TemplateBinding FontSize}">
                                    <RepeatButton.LayoutTransform>
                                        <ScaleTransform ScaleY="2.2" ScaleX="2.2" />
                                    </RepeatButton.LayoutTransform>
                                    <RepeatButton.Style>
                                        <Style TargetType="{x:Type RepeatButton}">
                                            <Setter Property="Padding" Value="0,2,2,2" />
                                            <Setter Property="Cursor" Value="Hand" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                        <Border Background="Transparent"
                                                                Padding="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}}"
                                                                Uid="Border_42">
                                                            <Viewbox x:Name="Content" RenderTransformOrigin="0.5,0.5"
                                                                     Uid="Viewbox_3">
                                                                <Canvas Height="32" Uid="Canvas_5" Width="32">
                                                                    <Path x:Name="Cross" Canvas.Left="16"
                                                                          Stroke="{StaticResource BrightBackgroundBrush}"
                                                                          StrokeThickness="5" Canvas.Top="16"
                                                                          Uid="Path_12">
                                                                        <Path.Data>
                                                                            <GeometryGroup>
                                                                                <LineGeometry EndPoint="10,0"
                                                                                              StartPoint="-10,0" />
                                                                                <LineGeometry EndPoint="0,10"
                                                                                              StartPoint="0,-10" />
                                                                            </GeometryGroup>
                                                                        </Path.Data>
                                                                    </Path>
                                                                </Canvas>
                                                            </Viewbox>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Stroke" TargetName="Cross"
                                                                        Value="{StaticResource HighlightBrush}" />
                                                            </Trigger>
                                                            <Trigger Property="IsPressed" Value="True">
                                                                <Setter Property="RenderTransform" TargetName="Content">
                                                                    <Setter.Value>
                                                                        <ScaleTransform ScaleY="0.9" ScaleX="0.9" />
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </RepeatButton.Style>
                                </RepeatButton>
                            </Grid>
                        </Grid>
                        <Grid Uid="Grid_33">
                            <Border x:Name="PART_ContentHost" BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    KeyboardNavigation.IsTabStop="False" Margin="{TemplateBinding Padding}"
                                    KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local"
                                    Uid="Border_59" />
                        </Grid>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ViewingMode" Value="Page">
                            <Setter Property="IsChecked" TargetName="PageViewButton" Value="True" />
                        </Trigger>
                        <Trigger Property="ViewingMode" Value="TwoPage">
                            <Setter Property="IsChecked" TargetName="TwoPageViewButton" Value="True" />
                        </Trigger>
                        <Trigger Property="ViewingMode" Value="Scroll">
                            <Setter Property="IsChecked" TargetName="ScrollViewButton" Value="True" />
                            <Setter Property="Visibility" TargetName="PageCountAndButtons" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Document" Value="{x:Null}">
                            <Setter Property="IsEnabled" TargetName="FindButton" Value="False" />
                        </Trigger>
                        <Trigger Property="IsFindEnabled" Value="False">
                            <Setter Property="IsEnabled" TargetName="FindButton" Value="False" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>